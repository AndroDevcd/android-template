// Generated by Dagger (https://google.github.io/dagger).
package com.rightpoint.github.mvi.remote;

import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import retrofit2.Retrofit;

public final class NetworkModule_ProvidesApiFactory implements Factory<GithubApi> {
  private final Provider<Retrofit> retrofitProvider;

  public NetworkModule_ProvidesApiFactory(Provider<Retrofit> retrofitProvider) {
    this.retrofitProvider = retrofitProvider;
  }

  @Override
  public GithubApi get() {
    return provideInstance(retrofitProvider);
  }

  public static GithubApi provideInstance(Provider<Retrofit> retrofitProvider) {
    return proxyProvidesApi(retrofitProvider.get());
  }

  public static NetworkModule_ProvidesApiFactory create(Provider<Retrofit> retrofitProvider) {
    return new NetworkModule_ProvidesApiFactory(retrofitProvider);
  }

  public static GithubApi proxyProvidesApi(Retrofit retrofit) {
    return Preconditions.checkNotNull(
        NetworkModule.providesApi(retrofit),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
