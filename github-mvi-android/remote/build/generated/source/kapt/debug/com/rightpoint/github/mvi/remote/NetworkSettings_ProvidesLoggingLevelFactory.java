// Generated by Dagger (https://google.github.io/dagger).
package com.rightpoint.github.mvi.remote;

import dagger.internal.Factory;
import dagger.internal.Preconditions;
import okhttp3.logging.HttpLoggingInterceptor;

public final class NetworkSettings_ProvidesLoggingLevelFactory
    implements Factory<HttpLoggingInterceptor.Level> {
  private static final NetworkSettings_ProvidesLoggingLevelFactory INSTANCE =
      new NetworkSettings_ProvidesLoggingLevelFactory();

  @Override
  public HttpLoggingInterceptor.Level get() {
    return provideInstance();
  }

  public static HttpLoggingInterceptor.Level provideInstance() {
    return proxyProvidesLoggingLevel();
  }

  public static NetworkSettings_ProvidesLoggingLevelFactory create() {
    return INSTANCE;
  }

  public static HttpLoggingInterceptor.Level proxyProvidesLoggingLevel() {
    return Preconditions.checkNotNull(
        NetworkSettings.providesLoggingLevel(),
        "Cannot return null from a non-@Nullable @Provides method");
  }
}
